/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hr.mpac.view;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.User;
import hr.algebra.utilities.MessageUtils;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author majap
 */
public class RegistrationPanel extends javax.swing.JPanel {
private List<JTextComponent> validationFields;
    private List<JLabel> errorLabels;
    private boolean role; 
    private boolean showPassword;

    private Repository repository;
    /**
     * Creates new form RegistrationPanel
     */
    public RegistrationPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfUserName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnRegistration = new javax.swing.JButton();
        lbUsernameError = new javax.swing.JLabel();
        lbPassError = new javax.swing.JLabel();
        pfPass = new javax.swing.JPasswordField();
        btnTogglePass = new javax.swing.JToggleButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Choose Username");

        jLabel2.setText("Choose Password");

        btnRegistration.setText("Registration");
        btnRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrationActionPerformed(evt);
            }
        });

        lbUsernameError.setForeground(new java.awt.Color(255, 0, 51));
        lbUsernameError.setText("X");

        lbPassError.setForeground(new java.awt.Color(255, 0, 51));
        lbPassError.setText("X");

        btnTogglePass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/show_password.jpg"))); // NOI18N
        btnTogglePass.setMaximumSize(new java.awt.Dimension(35, 22));
        btnTogglePass.setMinimumSize(new java.awt.Dimension(35, 22));
        btnTogglePass.setPreferredSize(new java.awt.Dimension(35, 22));
        btnTogglePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTogglePassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pfPass, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnTogglePass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tfUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbUsernameError, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbPassError, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(btnRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbUsernameError))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbPassError)
                        .addComponent(pfPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTogglePass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(btnRegistration)
                .addContainerGap(124, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrationActionPerformed
      if (!formValid()) {
            return;
        }
        char[] passwordChars = pfPass.getPassword();


        String enteredPassword = new String(passwordChars);
        try {
           setRole();
              User user = new User(
                    tfUserName.getText().trim(),
                    enteredPassword.replaceAll("\\s", ""),
                    role
            );
              boolean exists = repository.checkUser(user);
              if(exists) {
                  MessageUtils.showErrorMessage("Error", "User already exists");
                  
              } else if (enteredPassword.replaceAll("\\s", "").length() < 8) {
                   MessageUtils.showErrorMessage
        ("Error", "Password needs to be 8 characters long and cannot have blank spaces");
              } else {
                  repository.createUser(user);
                   MessageUtils.showErrorMessage("Success", "You have succesfully registered");
              }
              
            
          

            clearForm();
        } catch (Exception ex) {
            Logger.getLogger(RegistrationPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unable to register!");
        }
    }//GEN-LAST:event_btnRegistrationActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        init();
    }//GEN-LAST:event_formComponentShown

    private void btnTogglePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTogglePassActionPerformed
        if(btnTogglePass.isSelected()) {
             pfPass.setEchoChar((char) 0);
             btnTogglePass.setIcon(new javax.swing.ImageIcon
        (getClass().getResource("/assets/hide-password.png")));
        } else {
            pfPass.setEchoChar('*');  
             btnTogglePass.setIcon(new javax.swing.ImageIcon
        (getClass().getResource("/assets/show_password.jpg"))); 
        }
    }//GEN-LAST:event_btnTogglePassActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistration;
    private javax.swing.JToggleButton btnTogglePass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbPassError;
    private javax.swing.JLabel lbUsernameError;
    private javax.swing.JPasswordField pfPass;
    private javax.swing.JTextField tfUserName;
    // End of variables declaration//GEN-END:variables

    private void init() {
          try {
            initValidation();
            hideErrors();
     initRepository();
           
           
        } catch (Exception ex) {
            Logger.getLogger(LoginPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Unrecoverable error", "Cannot initiate the form");
            System.exit(1);
        }
    }

    private void initValidation() {
         validationFields = Arrays.asList(tfUserName, pfPass);
        errorLabels = Arrays.asList(lbUsernameError, lbPassError);
    }

    private void hideErrors() {
        errorLabels.forEach(e -> e.setVisible(false));
    }

    private void initRepository() {
        repository = RepositoryFactory.getRepository();
    }
     private void clearForm() {
        hideErrors();
        validationFields.forEach(e -> e.setText(""));
      
    }

    private boolean formValid() {
          hideErrors();
        boolean ok = true;

        for (int i = 0; i < validationFields.size(); i++) {
            ok &= !validationFields.get(i).getText().trim().isEmpty();
            errorLabels.get(i).setVisible(validationFields.get(i).getText().trim().isEmpty());
  
        }
        return ok;
    }
    
    private void setRole() {
        role = true;
    }

}
